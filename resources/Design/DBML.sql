//üìå Nguy√™n t·∫Øc thi·∫øt k·∫ø DB:

// B·∫£ng cha (1) ‚Üí kh√¥ng ch·ª©a kh√≥a ngo·∫°i t·ªõi b·∫£ng con.

// B·∫£ng con (n) ‚Üí lu√¥n ch·ª©a FK ƒë·ªÉ bi·∫øt n√≥ thu·ªôc v·ªÅ √¥ng cha n√†o.


// =======================
// TABLE: Hierarchy - ph√¢n c·∫•p theo ch·ª©c v·ª• v√† c·∫•p b·∫≠c
// 1 nh√¢n vi√™n ch·ªâ c√≥ 1 ch·ª©c v·ª• v√¨: ƒë√¢y l√† 1 c√¥ng ty c√≥ ƒë·ªô ph√¢n h√≥a 
// 1 nh√¢n vi√™n ch·ªâ c√≥ 1 ch·ª©c v·ª•, g·∫Øn li·ªÅn v·ªõi th·ª© b·∫≠c, l∆∞∆°ng, v·ªã tr√≠ trong c√¥ng ty.
// =======================
Table hierarchys
{
  id_hierarchy INT [pk, increment] // Kh√≥a ch√≠nh r·ªÖ r√†ng truy v·∫•n
  
  name_position VARCHAR(100) [unique, not null]    // T√™n ch·ª©c v·ª•: Developer, Team Lead, Manager
  name_level VARCHAR(50) [not null, note: "T√™n c·∫•p b·∫≠c, v√≠ d·ª•: Junior, Senior, Lead"]

  salary_multiplier DECIMAL(15,2) [note: " h·ªá s·ªë l∆∞∆°ng c∆° b·∫£n t∆∞∆°ng ·ª©ng c·∫•p b·∫≠c d√πng nh√¢n base_salary"]
  allowance DECIMAL(15,2) [note: "Ph·ª• c·∫•p theo c·∫•p b·∫≠c l√† ti·ªÅn c·ªë ƒë·ªãnh"]

  description TEXT // M√¥ t·∫£
  created_at TIMESTAMP
  updated_at TIMESTAMP

  indexes {
    (name_position, name_level) [unique]
  }
}

// =======================
// TABLE: Nh√¢n vi√™n ‚Äì Employees
// 1 nh√¢n vi√™n ch·ªâ c√≥ 1 profile t·∫°m th·ªùi ƒë·ªÉ chung cho √≠t b·∫£ng
// =======================
Table employees 
{
    id_employee INT [pk, increment] // Kh√≥a ch√≠nh

    name VARCHAR(150) [not null] // H·ªç v√† t√™n nh√¢n vi√™n
    gender INT [note: "1=male, 0=female, 3=unknown"] // Gi·ªõi t√≠nh
    cccd VARCHAR(20) [unique, not null, note: "gi·ªØ d·∫°ng text ƒë·ªÉ kh√¥ng m·∫•t s·ªë 0 ƒë·∫ßu"] // CCCD/CMND
    date_of_birth DATE // Ng√†y sinh
    address VARCHAR(300) // ƒê·ªãa ch·ªâ
    email VARCHAR(150) [unique, not null] // Email c√¥ng vi·ªác
    phone VARCHAR(15) // S·ªë ƒëi·ªán tho·∫°i

    bank_infor  VARCHAR(20) [note:"BankType_id"]// bank l∆∞∆°ng: const str = 'vietcombank_123456789'; const [bankName, accountNumber] = str.split('_');

    hire_date DATE // Ng√†y b·∫Øt ƒë·∫ßu l√†m vi·ªác

    id_hierarchy INT [ref: > hierarchys.id_hierarchy] // FK -> hierarchy  

    status ENUM('active','inactive','resigned') // Tr·∫°ng th√°i nh√¢n vi√™n

    description TEXT // M√¥ t·∫£
    created_at TIMESTAMP
    updated_at TIMESTAMP
}



// =======================
// TABLE: Ch·∫•m c√¥ng ‚Äì Attendances
// 1 nh√¢n vi√™n c√≥ 1 b·∫£ng ch·∫•m c√¥ng trong 1 ng√†y
// =======================
Table attendances 
{
    id_attendance INT [pk, increment] // Kh√≥a ch√≠nh
    id_employee INT [ref: > employees.id_employee] // FK -> employees

    of_date DATE // ng√†y n√†o
    office_hours DECIMAL(5,2)
    over_time DECIMAL(5,2) // lu√¥n b·∫±ng 0 n·∫øu office_hours < 8
    late_time DECIMAL(5,2)   // 8 - over_time > 0 <=>  office_hours > 0
    is_night_shift bool

    description TEXT // M√¥ t·∫£ th√™m
    created_at TIMESTAMP
    updated_at timestamp
    indexes {
       (id_employee, of_date) [unique]
    }
}

// =======================
// TABLE: H·ª£p ƒë·ªìng kh√¥ng x√°c ƒë·ªãnh th·ªùi h·∫°n (indefinite)
// 1 nh√¢n vi√™n ch·ªâ c√≥ th·ªÉ c√≥ 1 h·ª£p ƒë·ªìng c√≥ hi·ªáu l·ª±c 
// n·∫øu 2 h·ª£p ƒë·ªìng th√¨ s·∫Ω c√≥ 2 l∆∞∆°ng: 8h m√† l·∫°i c√≥ 2 l∆∞∆°ng=> b·∫•t kh·∫£ thi
// =======================
Table contracts 
{
    id_contract INT [pk, increment] // Kh√≥a ch√≠nh
    id_employee INT [ref: > employees.id_employee] // FK -> employees
    
    contract_type ENUM('fixed_term','indefinite','seasonal') // Lo·∫°i h·ª£p ƒë·ªìng
    base_salary DECIMAL(15,2) // L∆∞∆°ng c∆° b·∫£n | l√Ω do ƒë·∫∑t ·ªü ƒë√¢y v√¨ ƒë·ªÅ ph√≤ng l∆∞∆°ng theo th·ªèa thu·∫≠n

    effective_date DATE // Ng√†y b·∫Øt ƒë·∫ßu hi·ªáu l·ª±c
    expiry_date DATE // Ng√†y k·∫øt th√∫c hi·ªáu l·ª±c (c√≥ th·ªÉ NULL)
    status ENUM('active','expired','terminated') // Tr·∫°ng th√°i h·ª£p ƒë·ªìng

    description TEXT // M√¥ t·∫£
    created_at TIMESTAMP
    updated_at TIMESTAMP

    note: "R√†ng bu·ªôc: ch·ªâ c√≥ th·ªÉ t·ªìn t·∫°i 1 b·∫£n h·ª£p ƒë·ªìng c√≤n hi·ªáu l·ª±c"

}

// =======================
// TABLE: L∆∞∆°ng chi ti·∫øt ‚Äì Salary_details
// 1 b·∫£ng l∆∞∆°ng c∆° b·∫£n(c√≤n hi·ªáu l·ª±c) c√≥ 1 b·∫£ng l∆∞∆°ng chi ti·∫øt / th√°ng
// =======================
Table salary_details
{
    id_salary_details INT [pk, increment] // Kh√≥a ch√≠nh
    id_contract INT [ref: > contracts.id_contract] // FK -> salaries
    approved_by INT [ref: > employees.id_employee]

    salary_month DATE [not null] // Th√°ng l∆∞∆°ng (d√πng ng√†y = 01)

    overtime DECIMAL(15,2) [default: 0]
    bonus DECIMAL(15,2) [default: 0, not null] // Th∆∞·ªüng l·ªÖ , t·∫øt
    attendance_bonus DECIMAL(15,2) [default: 0] // Ph·ª• c·∫•p chuy√™n c·∫ßn | n·∫øu ko ƒë·ªß ng√†y c√¥ng tr·ª´ (50% ph·ª• c·∫•p)
    deduction DECIMAL(15,2) [default: 0, not null] // Kh·∫•u tr·ª´ | ph·∫°t | b·∫£o hi·ªÉm | thu·∫ø
   
    net_salary DECIMAL(15,2) // L∆∞∆°ng th·ª±c nh·∫≠n

    status ENUM('pending','paid') [default: 'pending'] // Tr·∫°ng th√°i tr·∫£ l∆∞∆°ng

    description TEXT // M√¥ t·∫£
    created_at TIMESTAMP [default: `current_timestamp`]
    updated_at TIMESTAMP [default: `current_timestamp`]

    indexes {
        (id_contract, salary_month) [unique] // M·ªói h·ª£p ƒë·ªìng l∆∞∆°ng ch·ªâ c√≥ 1 b·∫£n ghi/th√°ng
    }

    note: "R√†ng bu·ªôc: id_employee ph·∫£i kh√°c approved_by (kh√¥ng cho t·ª± duy·ªát)"
}



// =======================
// TABLE: Ngh·ªâ ph√©p ‚Äì Leaves
// 1 nh√¢n vi√™n c√≥ nhi·ªÅu l·∫ßn ngh·ªâ ph√©p (kh√¥ng tr√πng th·ªùi gian)
// =======================
Table leaves 
{
    id_leave INT [pk, increment] // Kh√≥a ch√≠nh
    id_employee INT [ref: > employees.id_employee] // FK -> employees
    approved_by INT [ref: > employees.id_employee] // FK -> employees
    
    start_date DATE // Ng√†y b·∫Øt ƒë·∫ßu ngh·ªâ
    end_date DATE // Ng√†y k·∫øt th√∫c ngh·ªâ
    type ENUM('annual','sick','unpaid','other') // Lo·∫°i ngh·ªâ ph√©p
    reason TEXT // L√Ω do
    status ENUM('pending','approved','rejected') [default: 'pending'] // Tr·∫°ng th√°i ƒë∆°n
    
    description TEXT // M√¥ t·∫£
    created_at TIMESTAMP
    updated_at TIMESTAMP

    indexes {
        (id_employee, start_date, end_date) 
    }

    note: "R√†ng bu·ªôc: id_employee ph·∫£i kh√°c approved_by (kh√¥ng cho t·ª± duy·ªát) | ch·ªâ 1 b·∫£n ph√©p c√≥ hi·ªáu l·ª±c t·ªìn t·∫°i"
}


// =======================
// TABLE: Quy ƒë·ªãnh l∆∞∆°ng ‚Äì Payroll_rules
// ƒë·ªãnh nghƒ©a ki·ªÉu d·ªØ li·ªáu ƒë·∫∑c trung cho sys. d√πng chung cho to√†n b·ªô nh√¢n vi√™n
// =======================
Table payroll_rules
{
    id_rule INT [pk, increment]

    type ENUM('attendance_bonus','overtime_rate','night_shift','holiday_bonus','meal_allowance','late_penalty','other')
    value_type ENUM('money','multiplier') [DEFAULT: 'money']
    value DECIMAL(15,2)  //-- s·ªë ti·ªÅn ho·∫∑c % √°p d·ª•ng
    
    effective_date DATE
    expiry_date DATE  //-- NULL n·∫øu √°p d·ª•ng v√¥ th·ªùi h·∫°n

    description TEXT
    created_at TIMESTAMP
    updated_at TIMESTAMP
}
